syntax = "proto3";

package participant;

import "google/protobuf/timestamp.proto";

enum ParticipantStatus {
  Active = 0;
  Banned = 1;
}

enum AddParticipantToChannelErrors {
  Unauthorized = 0;
  IsAlreadyExist = 1;
  IdentifierNotValid = 2;
  ChannelNotFound = 3;
}

enum GetParticipantAccessTokenErrors {
  RootUnauthorized = 0;
  NotFound = 1;
}

service ParticipantService {
  rpc AddParticipantToChannel(AddParticipantToChannelReq) returns (AddParticipantToChannelRes);
  rpc GetParticipantAccessToken(GetParticipantAccessTokenReq) returns (GetParticipantAccessTokenRes);
}

message AddParticipantToChannelRes {
  repeated AddParticipantToChannelErrors errors = 1;
  Participant participant = 2;
  string accessToken = 3;
  ChannelParticipantGrants grants = 4;
}

message ChannelParticipantGrants {
  optional bool sendMessage = 1;
  optional bool readMessages = 2;
  optional bool admin = 3;
}

message Participant {
  string identifier = 1;
  google.protobuf.Timestamp createdAt = 2;
  ParticipantStatus status = 3;
  string channelId = 4;
  optional CustomData customData = 5;
}

message AddParticipantToChannelReq {
  string identifier = 1;
  string channelId = 2;
  ChannelParticipantGrants grants = 3;
  optional CustomData customData = 4;
}

message GetParticipantAccessTokenReq {
  string identifier = 1;
  string channelId = 2;
}

message GetParticipantAccessTokenRes {
  repeated GetParticipantAccessTokenErrors errors = 1;
  string identifier = 2;
  string channelId = 3;
  string accessToken = 4;
}

message CustomData {
  map<string, string> data = 6;
}